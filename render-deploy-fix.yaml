# Alternative Render configuration with explicit database dependency
databases:
  - name: pipelineforge-db
    databaseName: pipelineforge
    user: pipelineforge_user
    plan: starter

services:
  - type: web
    name: pipelineforge
    env: node
    plan: starter
    buildCommand: npm install && npm run build
    startCommand: npm start
    healthCheckPath: /api/health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: DATABASE_URL
        fromDatabase:
          name: pipelineforge-db
          property: connectionString
      - key: GROQ_API_KEY
        sync: false
    autoDeploy: true
    rootDir: .
    # Wait for database to be ready
    preDeployCommand: "echo 'Waiting for database...'"
    buildFilter:
      paths:
        - client/**
        - server/**
        - shared/**
        - package.json
        - package-lock.json
        - vite.config.ts
        - tailwind.config.ts
        - tsconfig.json
        - drizzle.config.ts

# Optional: Add Redis for caching
# - type: redis
#   name: pipelineforge-cache
#   plan: starter