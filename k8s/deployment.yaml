apiVersion: apps/v1
kind: Deployment
metadata:
  name: pipelineforge-app
  namespace: pipelineforge
  labels:
    app.kubernetes.io/name: pipelineforge
    app.kubernetes.io/component: app
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: pipelineforge
      app.kubernetes.io/component: app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pipelineforge
        app.kubernetes.io/component: app
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/api/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: pipelineforge
        image: your-registry/pipelineforge:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 5000
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: pipelineforge-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: pipelineforge-config
              key: PORT
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: pipelineforge-secrets
              key: DATABASE_URL
        - name: GROQ_API_KEY
          valueFrom:
            secretKeyRef:
              name: pipelineforge-secrets
              key: GROQ_API_KEY
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1